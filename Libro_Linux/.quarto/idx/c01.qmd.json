{"title":"c01","markdown":{"yaml":{"title":"c01"},"headingText":"10 ways to use the Linux find command","containsRefs":false,"markdown":"\n\nhttps://www.redhat.com/sysadmin/linux-find-command\n\n\nDiscover what you're looking for, find misplaced data, and troubleshoot everyday problems with this handy Linux command.\n\nThe `find` command is one of the most useful Linux commands, especially when you're faced with the hundreds and thousands of files and folders on a modern computer. As its name implies, `find` helps you find things, and not just by filename.\n\nWhether you're on your own computer or trying to support someone on an unfamiliar system, here are 10 ways `find` can help you locate important data.\n\n***\\[ Keep your most commonly used commands handy with the [Linux commands cheat sheet](https://developers.redhat.com/cheat-sheets/linux-commands-cheat-sheet?intcmp=701f20000012ngPAAQ). \\]***\n\n## **1. Find a single file by name**\n\nWhen you know the name of a file but can't remember where you saved it, use `find` to search your home directory. Use `2>/dev/null` to silence permission errors (or use `sudo` to gain all permissions).\n\n```         \n$ find / -name \"Foo.txt\" 2>/dev/null\n/home/seth/Documents/Foo.txt\n```\n\n## **2. Find a single file by approximate name**\n\nIf you can't remember the exact name of the file, or you're not sure whether you capitalized any characters, you can do a partial and case-insensitive search like this:\n\n```         \n$ find / -iname \"*foo*txt\" 2>/dev/null\n/home/seth/Documents/Foo.txt\n/home/seth/Documents/foo.txt\n/home/seth/Documents/foobar.txt\n```\n\n## **3. Find everything**\n\nThe `ls -R` command lists the contents of a directory recursively, meaning that it doesn't just list the target you provide for it, but also descends into every subdirectory within that target (and every subdirectory in each subdirectory, and so on.) The `find` command has that function too, by way of the `-ls` option:\n\n```         \n$ find ~/Documents -ls\n3554235 0 drwxr-xr-x [...] 05:36 /home/seth/Documents/\n3554224 0 -rw-rw-r-- [...] 05:36 /home/seth/Documents/Foo\n3766411 0 -rw-rw-r-- [...] 05:36 /home/seth/Documents/Foo/foo.txt\n3766416 0 -rw-rw-r-- [...] 05:36 /home/seth/Documents/Foo/foobar.txt\n```\n\nNotice that I don't use `2>/dev/null` in this instance because I'm only listing the contents of a [file path](https://redhat.com/sysadmin/linux-path-absolute-relative) within my home directory, so I don't anticipate permission errors.\n\n## **4. Find by content**\n\nA `find` command doesn't have to perform just one task. In fact, one of the options in `find` enables you to execute a different command on whatever results `find` returns. This can be especially useful when you need to search for a file by *content* rather than by name, or you need to search by both.\n\n```         \n$ find ~/Documents/ -name \"*txt\" -exec grep -Hi penguin {} \\;\n/home/seth/Documents/Foo.txt:I like penguins.\n/home/seth/Documents/foo.txt:Penguins are fun.\n```\n\n## **5. Find files by type**\n\nYou can display files, directories, symlinks, named pipes, sockets, and more using the `-type` option.\n\n```         \n$ find ~ -type f\n/home/seth/.bash_logout\n/home/seth/.bash_profile\n/home/seth/.bashrc\n/home/seth/.emacs\n/home/seth/.local/share/keyrings/login.keyring\n/home/seth/.local/share/keyrings/user.keystore\n/home/seth/.local/share/gnome-shell/gnome-overrides-migrated\n[...]\n```\n\nAs long as you're using the GNU version of `find`, you can include multiple file types in your search results:\n\n```         \n$ find ~ -type f,l -name \"notebook*\"\n/home/seth/notebook.org\n/home/seth/Documents/notebook-alias.org\n```\n\n## **6. List just directories**\n\nA shortcoming of the [`ls` command](https://opensource.com/article/19/7/master-ls-command) is that you can't filter its results by file type, so it can be noisy if you only want a listing of directories in a path. The `find` command combined with the `-type d` option is a better choice:\n\n```         \n$ find ~/Public -type d\nfind ~/Public/ -type d\n/home/seth/Public/\n/home/seth/Public/example.com\n/home/seth/Public/example.com/www\n/home/seth/Public/example.com/www/img\n/home/seth/Public/example.com/www/font\n/home/seth/Public/example.com/www/style\n```\n\n## **7. Limit listing results**\n\nWith hundreds of files in a default user directory and thousands more outside of that, sometimes you get more results from `find` than you want. You can limit the depth of searches with the `-maxdepth` option, followed by the number of directories you want `find` to descend into after the starting point:\n\n```         \n$ find ~/Public/ -maxdepth 1 -type d\n/home/seth/Public/\n/home/seth/Public/example.com\n```\n\n## **8. Find empty files**\n\nSometimes it's helpful to discover empty files as a way to declutter:\n\n```         \n$ find ~ -type f -empty\nrandom.idea.txt\n```\n\n[Skip to the bottom of list](https://www.redhat.com/sysadmin/linux-find-command#bottom-list)\n\n## Great Linux resources\n\n-   [Advanced Linux commands cheat sheet](https://developers.redhat.com/cheat-sheets/advanced-linux-commands/?intcmp=701f20000012ngPAAQ)\n\n-   [Download RHEL 9 at no charge through the Red Hat Developer program](https://developers.redhat.com/products/rhel/download?intcmp=701f20000012ngPAAQ)\n\n-   [A guide to installing applications on Linux](https://opensource.com/downloads/installing-linux-applications-ebook?intcmp=701f20000012ngPAAQ)\n\n-   [Linux system administration skills assessment](https://rhtapps.redhat.com/assessment/?intcmp=701f20000012ngPAAQ)\n\n-   [How well do you know Linux? Take a quiz and get a badge](https://redhatdg.co1.qualtrics.com/jfe/form/SV_bjRFSHqPdTpIjoa?intcmp=701f20000012ngPAAQ)\n\nTechnically, you can use `find` to remove empty files, but programmatic removal of files is dangerous. For instance, if you forget to include `-type f` in a search for empty *files*, you get directories in your results. By adding a delete flag, you would remove potentially important directory structures.\n\nIt's vital to compose your `find` command and then verify the results before deleting. Furthermore, a misplaced delete flag in `find` can delete results before qualifying them (in other words, you can delete directories in a command intended to delete only files by placing the delete flag before the type flag).\n\nI prefer to use `xargs` or [Parallel](https://www.redhat.com/sysadmin/gnu-parallel) and a [trash command](https://www.redhat.com/sysadmin/recover-file-deletion-linux#trashy) on the rare occasion that I remove files with `find`.\n\n## **9. Find files by age**\n\nThe `-mtime` option allows you to limit a search to files older than, but also files newer than, *some value* times 24.\n\n```         \n$ find /var/log -iname \"*~\" -o -iname \"*log*\" -mtime +30\n```\n\nThe `+` before the `-mtime` number doesn't mean to add that number to the time. It's a conditional statement that matches (in this example) a value *greater than* 24 times 30. In other words, the sample code finds log files that haven't been modified in a month or more.\n\nTo find log files modified within the past week, you can use the `-` conditional:\n\n```         \n$ find /var/log -iname \"*~\" -o -iname \"*log*\" -mtime -7\n/var/log/tallylog\n/var/log/cups/error_log\n/var/log/cups/access_log\n/var/log/cups/page_log\n/var/log/anaconda/anaconda.log\n/var/log/anaconda/syslog\n/var/log/anaconda/X.log\n[...]\n```\n\nYou already know about the `-ls` flag, so you can combine that with these commands for clarity:\n\n```         \n$ find /var/log -iname \"*~\" -o -iname \"*log*\" -mtime -7 -ls\n-rw-------  1 root root            0 Jun  9 18:20 /var/log/tallylog\n-rw-------  1 root lp      332 Aug 11 15:05 /var/log/cups/error_log\n-rw-------  1 root lp      332 Aug 11 15:05 /var/log/cups/access_log\n-rw-------  1 root lp      332 Aug 11 15:05 /var/log/cups/page_log\n-rw-------  1 root root  53733 Jun  9 18:24 /var/log/anaconda/anaconda.log\n-rw-------  1 root root 835513 Jun  9 18:24 /var/log/anaconda/syslog\n-rw-------  1 root root  21131 Jun  9 18:24 /var/log/anaconda/X.log\n[...]\n```\n\n## **10. Search a path**\n\nSometimes you know the directory structure leading up to a file you need; you just don't know where the directory structure is located within the system. To search within a path string, you can use the `-ipath` option, which treats dots and slashes not as [regex characters](https://www.redhat.com/sysadmin/getting-started-regular-expressions-example) but as dots and slashes.\n\n```         \n$ find / -type d -name 'img' -ipath \"*public_html/example.com*\" 2>/dev/null\n/home/tux/Public/public_html/example.com/font\n```\n\n## **Found it**\n\nThe `find` command is an essential tool for a sysadmin. It's useful when investigating or getting to know a new system, finding misplaced data, and [troubleshooting](https://www.redhat.com/sysadmin/find-best-friend) everyday problems. But it's also just a convenience tool.\n\n***\\[ Download the [Linux find cheat sheet](https://opensource.com/downloads/linux-find-cheat-sheet?intcmp=701f20000012ngPAAQ) to keep all these shortcuts in one place. \\]***\n\nYou don't need a \"good\" reason to use `find`. Using `find` makes it easier to search for something instead of traversing your system. It's an understated but infinitely useful tool that embodies the sublime pleasure of everyday Linux. Start using it today, and *find* out what makes it great.\n","srcMarkdownNoYaml":"\n\nhttps://www.redhat.com/sysadmin/linux-find-command\n\n## 10 ways to use the Linux find command\n\nDiscover what you're looking for, find misplaced data, and troubleshoot everyday problems with this handy Linux command.\n\nThe `find` command is one of the most useful Linux commands, especially when you're faced with the hundreds and thousands of files and folders on a modern computer. As its name implies, `find` helps you find things, and not just by filename.\n\nWhether you're on your own computer or trying to support someone on an unfamiliar system, here are 10 ways `find` can help you locate important data.\n\n***\\[ Keep your most commonly used commands handy with the [Linux commands cheat sheet](https://developers.redhat.com/cheat-sheets/linux-commands-cheat-sheet?intcmp=701f20000012ngPAAQ). \\]***\n\n## **1. Find a single file by name**\n\nWhen you know the name of a file but can't remember where you saved it, use `find` to search your home directory. Use `2>/dev/null` to silence permission errors (or use `sudo` to gain all permissions).\n\n```         \n$ find / -name \"Foo.txt\" 2>/dev/null\n/home/seth/Documents/Foo.txt\n```\n\n## **2. Find a single file by approximate name**\n\nIf you can't remember the exact name of the file, or you're not sure whether you capitalized any characters, you can do a partial and case-insensitive search like this:\n\n```         \n$ find / -iname \"*foo*txt\" 2>/dev/null\n/home/seth/Documents/Foo.txt\n/home/seth/Documents/foo.txt\n/home/seth/Documents/foobar.txt\n```\n\n## **3. Find everything**\n\nThe `ls -R` command lists the contents of a directory recursively, meaning that it doesn't just list the target you provide for it, but also descends into every subdirectory within that target (and every subdirectory in each subdirectory, and so on.) The `find` command has that function too, by way of the `-ls` option:\n\n```         \n$ find ~/Documents -ls\n3554235 0 drwxr-xr-x [...] 05:36 /home/seth/Documents/\n3554224 0 -rw-rw-r-- [...] 05:36 /home/seth/Documents/Foo\n3766411 0 -rw-rw-r-- [...] 05:36 /home/seth/Documents/Foo/foo.txt\n3766416 0 -rw-rw-r-- [...] 05:36 /home/seth/Documents/Foo/foobar.txt\n```\n\nNotice that I don't use `2>/dev/null` in this instance because I'm only listing the contents of a [file path](https://redhat.com/sysadmin/linux-path-absolute-relative) within my home directory, so I don't anticipate permission errors.\n\n## **4. Find by content**\n\nA `find` command doesn't have to perform just one task. In fact, one of the options in `find` enables you to execute a different command on whatever results `find` returns. This can be especially useful when you need to search for a file by *content* rather than by name, or you need to search by both.\n\n```         \n$ find ~/Documents/ -name \"*txt\" -exec grep -Hi penguin {} \\;\n/home/seth/Documents/Foo.txt:I like penguins.\n/home/seth/Documents/foo.txt:Penguins are fun.\n```\n\n## **5. Find files by type**\n\nYou can display files, directories, symlinks, named pipes, sockets, and more using the `-type` option.\n\n```         \n$ find ~ -type f\n/home/seth/.bash_logout\n/home/seth/.bash_profile\n/home/seth/.bashrc\n/home/seth/.emacs\n/home/seth/.local/share/keyrings/login.keyring\n/home/seth/.local/share/keyrings/user.keystore\n/home/seth/.local/share/gnome-shell/gnome-overrides-migrated\n[...]\n```\n\nAs long as you're using the GNU version of `find`, you can include multiple file types in your search results:\n\n```         \n$ find ~ -type f,l -name \"notebook*\"\n/home/seth/notebook.org\n/home/seth/Documents/notebook-alias.org\n```\n\n## **6. List just directories**\n\nA shortcoming of the [`ls` command](https://opensource.com/article/19/7/master-ls-command) is that you can't filter its results by file type, so it can be noisy if you only want a listing of directories in a path. The `find` command combined with the `-type d` option is a better choice:\n\n```         \n$ find ~/Public -type d\nfind ~/Public/ -type d\n/home/seth/Public/\n/home/seth/Public/example.com\n/home/seth/Public/example.com/www\n/home/seth/Public/example.com/www/img\n/home/seth/Public/example.com/www/font\n/home/seth/Public/example.com/www/style\n```\n\n## **7. Limit listing results**\n\nWith hundreds of files in a default user directory and thousands more outside of that, sometimes you get more results from `find` than you want. You can limit the depth of searches with the `-maxdepth` option, followed by the number of directories you want `find` to descend into after the starting point:\n\n```         \n$ find ~/Public/ -maxdepth 1 -type d\n/home/seth/Public/\n/home/seth/Public/example.com\n```\n\n## **8. Find empty files**\n\nSometimes it's helpful to discover empty files as a way to declutter:\n\n```         \n$ find ~ -type f -empty\nrandom.idea.txt\n```\n\n[Skip to the bottom of list](https://www.redhat.com/sysadmin/linux-find-command#bottom-list)\n\n## Great Linux resources\n\n-   [Advanced Linux commands cheat sheet](https://developers.redhat.com/cheat-sheets/advanced-linux-commands/?intcmp=701f20000012ngPAAQ)\n\n-   [Download RHEL 9 at no charge through the Red Hat Developer program](https://developers.redhat.com/products/rhel/download?intcmp=701f20000012ngPAAQ)\n\n-   [A guide to installing applications on Linux](https://opensource.com/downloads/installing-linux-applications-ebook?intcmp=701f20000012ngPAAQ)\n\n-   [Linux system administration skills assessment](https://rhtapps.redhat.com/assessment/?intcmp=701f20000012ngPAAQ)\n\n-   [How well do you know Linux? Take a quiz and get a badge](https://redhatdg.co1.qualtrics.com/jfe/form/SV_bjRFSHqPdTpIjoa?intcmp=701f20000012ngPAAQ)\n\nTechnically, you can use `find` to remove empty files, but programmatic removal of files is dangerous. For instance, if you forget to include `-type f` in a search for empty *files*, you get directories in your results. By adding a delete flag, you would remove potentially important directory structures.\n\nIt's vital to compose your `find` command and then verify the results before deleting. Furthermore, a misplaced delete flag in `find` can delete results before qualifying them (in other words, you can delete directories in a command intended to delete only files by placing the delete flag before the type flag).\n\nI prefer to use `xargs` or [Parallel](https://www.redhat.com/sysadmin/gnu-parallel) and a [trash command](https://www.redhat.com/sysadmin/recover-file-deletion-linux#trashy) on the rare occasion that I remove files with `find`.\n\n## **9. Find files by age**\n\nThe `-mtime` option allows you to limit a search to files older than, but also files newer than, *some value* times 24.\n\n```         \n$ find /var/log -iname \"*~\" -o -iname \"*log*\" -mtime +30\n```\n\nThe `+` before the `-mtime` number doesn't mean to add that number to the time. It's a conditional statement that matches (in this example) a value *greater than* 24 times 30. In other words, the sample code finds log files that haven't been modified in a month or more.\n\nTo find log files modified within the past week, you can use the `-` conditional:\n\n```         \n$ find /var/log -iname \"*~\" -o -iname \"*log*\" -mtime -7\n/var/log/tallylog\n/var/log/cups/error_log\n/var/log/cups/access_log\n/var/log/cups/page_log\n/var/log/anaconda/anaconda.log\n/var/log/anaconda/syslog\n/var/log/anaconda/X.log\n[...]\n```\n\nYou already know about the `-ls` flag, so you can combine that with these commands for clarity:\n\n```         \n$ find /var/log -iname \"*~\" -o -iname \"*log*\" -mtime -7 -ls\n-rw-------  1 root root            0 Jun  9 18:20 /var/log/tallylog\n-rw-------  1 root lp      332 Aug 11 15:05 /var/log/cups/error_log\n-rw-------  1 root lp      332 Aug 11 15:05 /var/log/cups/access_log\n-rw-------  1 root lp      332 Aug 11 15:05 /var/log/cups/page_log\n-rw-------  1 root root  53733 Jun  9 18:24 /var/log/anaconda/anaconda.log\n-rw-------  1 root root 835513 Jun  9 18:24 /var/log/anaconda/syslog\n-rw-------  1 root root  21131 Jun  9 18:24 /var/log/anaconda/X.log\n[...]\n```\n\n## **10. Search a path**\n\nSometimes you know the directory structure leading up to a file you need; you just don't know where the directory structure is located within the system. To search within a path string, you can use the `-ipath` option, which treats dots and slashes not as [regex characters](https://www.redhat.com/sysadmin/getting-started-regular-expressions-example) but as dots and slashes.\n\n```         \n$ find / -type d -name 'img' -ipath \"*public_html/example.com*\" 2>/dev/null\n/home/tux/Public/public_html/example.com/font\n```\n\n## **Found it**\n\nThe `find` command is an essential tool for a sysadmin. It's useful when investigating or getting to know a new system, finding misplaced data, and [troubleshooting](https://www.redhat.com/sysadmin/find-best-friend) everyday problems. But it's also just a convenience tool.\n\n***\\[ Download the [Linux find cheat sheet](https://opensource.com/downloads/linux-find-cheat-sheet?intcmp=701f20000012ngPAAQ) to keep all these shortcuts in one place. \\]***\n\nYou don't need a \"good\" reason to use `find`. Using `find` makes it easier to search for something instead of traversing your system. It's an understated but infinitely useful tool that embodies the sublime pleasure of everyday Linux. Start using it today, and *find* out what makes it great.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"c01.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","bibliography":["references.bib"],"editor":"visual","theme":"cosmo","title":"c01"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","output-file":"c01.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"block-headings":true,"bibliography":["references.bib"],"editor":"visual","documentclass":"scrreprt","title":"c01"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}